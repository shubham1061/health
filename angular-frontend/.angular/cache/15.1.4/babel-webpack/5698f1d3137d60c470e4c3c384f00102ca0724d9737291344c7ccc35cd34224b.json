{"ast":null,"code":"import { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateEmployeeComponent {\n  constructor(employeeService, route, router) {\n    this.employeeService = employeeService;\n    this.route = route;\n    this.router = router;\n    this.employee = new Employee();\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe(data => {\n      this.goToEmployeeList();\n    }, error => console.log(error));\n  }\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n}\nUpdateEmployeeComponent.ɵfac = function UpdateEmployeeComponent_Factory(t) {\n  return new (t || UpdateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nUpdateEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateEmployeeComponent,\n  selectors: [[\"app-update-employee\"]],\n  decls: 30,\n  vars: 6,\n  consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"firstname\", \"name\", \"firstname\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"lastname\", \"name\", \"lastname\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"sapid\", \"name\", \"sapid\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"emailid\", \"name\", \"emailid\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"medicalhis\", \"name\", \"medicalhis\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"prescription\", \"name\", \"prescription\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function UpdateEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \" Update Employee \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateEmployeeComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \" First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.employee.firstname = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \" Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.employee.lastname = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\");\n      i0.ɵɵtext(14, \" Sap Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.employee.sapid = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\");\n      i0.ɵɵtext(18, \" Email Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.employee.emailid = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\");\n      i0.ɵɵtext(22, \" Medical\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.employee.medicalhis = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 2)(25, \"label\");\n      i0.ɵɵtext(26, \" Prescription\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.employee.prescription = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"button\", 9);\n      i0.ɵɵtext(29, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.firstname);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.lastname);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.sapid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.emailid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.medicalhis);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.prescription);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,aAAa;;;;;AAQtC,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,eAAgC,EAC1CC,KAAqB,EACrBC,MAAc;IAFJ,oBAAe,GAAfF,eAAe;IACzB,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAHhB,aAAQ,GAAa,IAAIL,QAAQ,EAAE;EAGP;EAE5BM,QAAQ;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAE1C,IAAI,CAACN,eAAe,CAACO,eAAe,CAAC,IAAI,CAACH,EAAE,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MAC7D,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACjC;EAEAG,QAAQ;IACN,IAAI,CAACd,eAAe,CAACe,cAAc,CAAC,IAAI,CAACX,EAAE,EAAE,IAAI,CAACM,QAAQ,CAAC,CAACF,SAAS,CAAEC,IAAI,IAAG;MAC5E,IAAI,CAACO,gBAAgB,EAAE;IACzB,CAAC,EACCL,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAChC;EAEAK,gBAAgB;IACd,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;;AAzBWnB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVpCC,8BAAkC;MACzBA,iCAAgB;MAAAA,iBAAK;MAC1BA,+BAAgC;MAA1BA;QAAA,OAAcC,cAAU;MAAA,EAAC;MAI3BD,8BAAwB;MACZA,2BAAU;MAAAA,iBAAQ;MAC1BA,gCACyD;MAArDA;QAAA;MAAA,EAAkC;MADtCA,iBACyD;MAG7DA,8BAAwB;MACZA,2BAAS;MAAAA,iBAAQ;MACzBA,iCACwD;MAApDA;QAAA;MAAA,EAAiC;MADrCA,iBACwD;MAG5DA,+BAAwB;MACZA,wBAAM;MAAAA,iBAAQ;MACtBA,iCACkD;MAA9CA;QAAA;MAAA,EAA8B;MADlCA,iBACkD;MAEtDA,+BAAwB;MACZA,0BAAQ;MAAAA,iBAAQ;MACxBA,iCACsD;MAAlDA;QAAA;MAAA,EAAgC;MADpCA,iBACsD;MAG1DA,+BAAwB;MACZA,yBAAO;MAAAA,iBAAQ;MACvBA,iCAC4D;MAAxDA;QAAA;MAAA,EAAmC;MADvCA,iBAC4D;MAIhEA,+BAAwB;MACZA,8BAAY;MAAAA,iBAAQ;MAC5BA,iCACgE;MAA5DA;QAAA;MAAA,EAAqC;MADzCA,iBACgE;MAIpEA,kCAAiD;MAAAA,uBAAM;MAAAA,iBAAS;;;MAlCxDA,eAAkC;MAAlCA,gDAAkC;MAMlCA,eAAiC;MAAjCA,+CAAiC;MAMjCA,eAA8B;MAA9BA,4CAA8B;MAK9BA,eAAgC;MAAhCA,8CAAgC;MAMhCA,eAAmC;MAAnCA,iDAAmC;MAOnCA,eAAqC;MAArCA,mDAAqC","names":["Employee","UpdateEmployeeComponent","constructor","employeeService","route","router","ngOnInit","id","snapshot","params","getEmployeeById","subscribe","data","employee","error","console","log","onSubmit","updateEmployee","goToEmployeeList","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\91639\\Desktop\\minor2_project\\angular-frontend\\src\\app\\update-employee\\update-employee.component.ts","C:\\Users\\91639\\Desktop\\minor2_project\\angular-frontend\\src\\app\\update-employee\\update-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee = new Employee();\n  constructor(private employeeService: EmployeeService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n\n  onSubmit(){\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe( data =>{\n      this.goToEmployeeList();\n    }\n    , error => console.log(error));\n  }\n\n  goToEmployeeList(){\n    this.router.navigate(['/employees']);\n  }\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <h3> Update Employee </h3>\n    <form (ngSubmit) = \"onSubmit()\">\n       \n        \n    \n        <div class=\"form-group\">\n            <label> First Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"firstname\"\n                [(ngModel)] = \"employee.firstname\"name = \"firstname\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label> Last Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"lastname\"\n                [(ngModel)] = \"employee.lastname\" name = \"lastname\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label> Sap Id</label>\n            <input type=\"text\" class =\"form-control\" id = \"sapid\"\n                [(ngModel)] = \"employee.sapid\" name = \"sapid\">\n        </div>\n        <div class=\"form-group\">\n            <label> Email Id</label>\n            <input type=\"text\" class =\"form-control\" id = \"emailid\"\n                [(ngModel)] = \"employee.emailid\" name = \"emailid\">\n        </div>\n        \n        <div class=\"form-group\">\n            <label> Medical</label>\n            <input type=\"text\" class =\"form-control\" id = \"medicalhis\"\n                [(ngModel)] = \"employee.medicalhis\" name = \"medicalhis\">\n        </div>\n        \n        \n        <div class=\"form-group\">\n            <label> Prescription</label>\n            <input type=\"text\" class =\"form-control\" id = \"prescription\"\n                [(ngModel)] = \"employee.prescription\" name = \"prescription\">\n        </div>\n        \n    \n        <button class = \"btn btn-success\" type =\"submit\">Submit</button>\n    \n    </form>\n    </div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}