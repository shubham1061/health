{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction EmployeeListComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_tr_22_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const employee_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateEmployee(employee_r1.Id));\n    });\n    i0.ɵɵtext(17, \"Update\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const employee_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.Id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.sapid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.firstname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.lastname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.emailid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.medicalhis);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.prescription);\n  }\n}\nexport class EmployeeListComponent {\n  constructor(employeeService, router) {\n    this.employeeService = employeeService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.getEmployees();\n  }\n  getEmployees() {\n    this.employeeService.getEmployeesList().subscribe(data => {\n      this.employees = data;\n    });\n  }\n  employeeDetails(Id) {\n    this.router.navigate(['employee-details', Id]);\n  }\n  updateEmployee(Id) {\n    this.router.navigate(['update-employee', Id]);\n  }\n  deleteEmployee(Id) {\n    this.employeeService.deleteEmployee(Id).subscribe(data => {\n      console.log(data);\n      this.getEmployees();\n    });\n  }\n}\nEmployeeListComponent.ɵfac = function EmployeeListComponent_Factory(t) {\n  return new (t || EmployeeListComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router));\n};\nEmployeeListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeListComponent,\n  selectors: [[\"app-employee-list\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-info\", 3, \"click\"]],\n  template: function EmployeeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Patient List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Sap Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"emailid\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Medical History\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Prescription\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tbody\");\n      i0.ɵɵtemplate(22, EmployeeListComponent_tr_22_Template, 18, 7, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAeQA,0BAAuC;IAC/BA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,aAAoB;IAAAA,iBAAK;IAC7BA,2BAAI;IAAAA,aAAuB;IAAAA,iBAAK;IAChCA,2BAAI;IAAAA,aAAyB;IAAAA,iBAAK;IAClCA,2BAAI;IACQA;MAAA;MAAA;MAAA;MAAA,OAAUA,oDAA2B;IAAA,EAAC;IAAsBA,uBAAM;IAAAA,iBAAS;;;;IARnFA,eAAe;IAAfA,oCAAe;IACfA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAsB;IAAtBA,2CAAsB;IACtBA,eAAqB;IAArBA,0CAAqB;IACrBA,eAAoB;IAApBA,yCAAoB;IACpBA,eAAuB;IAAvBA,4CAAuB;IACvBA,eAAyB;IAAzBA,8CAAyB;;;ACbzC,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,eAAgC,EAC1CC,MAAc;IADJ,oBAAe,GAAfD,eAAe;IACzB,WAAM,GAANC,MAAM;EAAY;EAE5BC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEQA,YAAY;IAClB,IAAI,CAACH,eAAe,CAACI,gBAAgB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACvD,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,CAAC;EACJ;EAEAE,eAAe,CAACC,EAAU;IACxB,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,kBAAkB,EAACD,EAAE,CAAC,CAAC;EAC/C;EAEAE,cAAc,CAACF,EAAU;IACvB,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,iBAAiB,EAAED,EAAE,CAAC,CAAC;EAC/C;EAEAG,cAAc,CAACH,EAAU;IACvB,IAAI,CAACT,eAAe,CAACY,cAAc,CAACH,EAAE,CAAC,CAACJ,SAAS,CAAEC,IAAI,IAAG;MACxDO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MACjB,IAAI,CAACH,YAAY,EAAE;IACrB,CAAC,CAAC;EACJ;;AA9BWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCtB,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MACrBA,gCAAmC;MAGnBA,kBAAE;MAAAA,iBAAK;MACXA,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MACfA,0BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,0BAAS;MAAAA,iBAAK;MAClBA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAChBA,2BAAI;MAAAA,gCAAe;MAAAA,iBAAK;MACxBA,2BAAI;MAAAA,6BAAY;MAAAA,iBAAK;MACrBA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAGvBA,8BAAO;MACJA,uEAoBK;MACRA,iBAAQ;;;MArBoBA,gBAAY;MAAZA,uCAAY","names":["i0","EmployeeListComponent","constructor","employeeService","router","ngOnInit","getEmployees","getEmployeesList","subscribe","data","employees","employeeDetails","Id","navigate","updateEmployee","deleteEmployee","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\91639\\Desktop\\minor2_project\\angular-frontend\\src\\app\\employee-list\\employee-list.component.html","C:\\Users\\91639\\Desktop\\minor2_project\\angular-frontend\\src\\app\\employee-list\\employee-list.component.ts"],"sourcesContent":["<h2>Patient List</h2>\n<table class=\"table table-striped\">\n     <thead>\n        <tr>\n            <th>Id</th> \n            <th>Sap Id</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>emailid</th>\n            <th>Medical History</th>\n            <th>Prescription</th>\n            <th>Actions</th>\n        </tr>\n     </thead>\n     <tbody>\n        <tr *ngFor=\"let employee of employees\">\n            <td>{{employee.Id}}</td>\n            <td>{{employee.sapid}}</td>\n            <td>{{employee.firstname}}</td>\n            <td>{{employee.lastname}}</td>\n            <td>{{employee.emailid}}</td>\n            <td>{{employee.medicalhis}}</td>\n            <td>{{employee.prescription}}</td>\n            <td>\n                <button (click)= \"updateEmployee(employee.Id)\" class=\"btn btn-info\">Update</button>            \n            </td>\n           \n\n            \n           \n\n\n\n\n\n        </tr>\n     </tbody>\n\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee'\nimport { EmployeeService } from '../employee.service'\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employees: Employee[];\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.getEmployees();\n  }\n\n  private getEmployees(){\n    this.employeeService.getEmployeesList().subscribe(data => {\n      this.employees = data;\n    });\n  }\n\n  employeeDetails(Id: number){\n    this.router.navigate(['employee-details',Id]);\n  }\n\n  updateEmployee(Id: number){\n    this.router.navigate(['update-employee', Id]);\n  }\n\n  deleteEmployee(Id: number){\n    this.employeeService.deleteEmployee(Id).subscribe( data => {\n      console.log(data);\n      this.getEmployees();\n    })\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}